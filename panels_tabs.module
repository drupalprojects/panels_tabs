<?php
// $Id $

/**
 * @file
 * Configurable 'tabs' panel style.
 */

//----------------------------------------------------------------------------
// Panels hooks.

/**
 * Implementation of hook_panels_styles().
 */
function panels_tabs_panels_styles() {
  return array(
    'tabs' => array(
      'title' => t('Tabs'),
      'description' => t('Presents the panes in tabs.'),
      'panels implementations' => array(),
      'render panel' => 'panels_tabs_style_render_panel',
      'settings form' => 'panels_tabs_style_settings_form',
      'settings validate' => 'panels_tabs_style_settings_validate',
    ),
  );
}

//----------------------------------------------------------------------------
// Panels callbacks.


/**
 * Panel style settings form callback.
 */
function panels_tabs_style_settings_form($style_settings) {
  $form['filling_tabs'] = array(
    '#type' => 'radios',
    '#title' => t('Horizontally filling tabs'),
    '#options' => array(
      0 => t('Disabled'),
      1 => t('Equal width tabs'),
      2 => t('Equal width scaling tabs'),
    ),
    '#description' => t(
      "Horizontally filling tabs make sure the tabs consume all available
      horizontal space.<br />
      Equal width tabs: sets the <em>width</em> property, forcing each tab
      to be equally wide. If the text doesn't fit in the tab, the overflow
      will be hidden.<br />
      Equal width scaling tabs: sets the <em>min-width</em> property,
      forcing each tab to be equally wide, but allowing the tabs with more
      text to scale to allow all text to be displayed."
    ),
    '#default_value' => (isset($style_settings['filling_tabs'])) ? $style_settings['filling_tabs'] : 0,
  );
  return $form;
}

/**
 * Panel style settings form validation callback.
 */
function panels_tabs_style_settings_validate($style_settings, $form, $form_values) {
  if (!in_array($form_values['filling_tabs'], array(0, 1, 2))) {
    form_error($form['filling_tabs'], t('Invalid value detected.'));
  }
}

/**
 * Panel style render callback.
 */
function theme_panels_tabs_style_render_panel($display, $panel_id, $panes, $settings) {
  $output = '';

  $tabs = array();
  $id = "panels-tabs-$panel_id";

  if ($settings['filling_tabs'] > 0) {
    drupal_add_js(drupal_get_path('module', 'panels_tabs') .'/panels_tabs.js');
  	drupal_add_js(
  	  array(
  	    'panels_tabs' => array(
  	      'filling_tabs' => array(
  	        $id => $settings['filling_tabs'],
  	      ),
  	    )
  	  ),
  	  'setting'
  	);
  }

  $tabs[$id] = array(
    '#type' => 'tabset',
  );
  foreach ($panes as $pos => $pane) {
    $tabs[$id][$pos] = array(
      '#type' => 'tabpage',
      '#title' => $pane->subject,
      '#content' => $pane->content,
      '#weight' => $pos,
    );
  }
  $output = tabs_render($tabs);
  
  return $output;
}
